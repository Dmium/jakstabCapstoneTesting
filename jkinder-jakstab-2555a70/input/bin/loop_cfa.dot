digraph G {
node[shape=rectangle,style=filled,fillcolor=lightsteelblue,color=lightsteelblue]
bgcolor="transparent"
graph [label="Jakstab v0.8.4-devel   Fri Jul 07 14:16:14 BST 2017\n-m input/bin/loop.exe", labelloc=t, fontsize=35, pad=30]"0x00401005_4"[label="0x00401005_4"];
"0x00401005_3"[label="0x00401005_3"];
"0x00401007_5"[label="0x00401007_5"];
"0x00401000_0"[label="0x00401000_0"];
"0xface0000_0"[label="0xface0000_0",fillcolor="lightgrey",color="green",style="filled,bold"];
"0xface0000_1"[label="0xface0000_1",fillcolor="lightgrey",color="lightgrey"];
"0xface0000_4"[label="0xface0000_4",fillcolor="lightgrey",color="lightgrey"];
"0xface0000_5"[label="0xface0000_5",fillcolor="lightgrey",color="lightgrey"];
"0xface0000_2"[label="0xface0000_2",fillcolor="lightgrey",color="lightgrey"];
"0xface0000_3"[label="0xface0000_3",fillcolor="lightgrey",color="lightgrey"];
"0x0040100a_1"[label="0x0040100a_1"];
"0x0040100a_0"[label="0x0040100a_0"];
"0x00401007_0"[label="0x00401007_0"];
"0x00401008_1"[label="0x00401008_1"];
"0x00401008_0"[label="0x00401008_0"];
"0x0040100a_2"[label="0x0040100a_2"];
"0xfee70000_0"[label="0xfee70000_0",fillcolor="lightgrey",color="orange",style="filled,bold"];
"0x00401007_2"[label="0x00401007_2"];
"0x00401005_0"[label="0x00401005_0"];
"0x00401007_1"[label="0x00401007_1"];
"0x00401005_2"[label="0x00401005_2"];
"0x00401007_4"[label="0x00401007_4"];
"0x00401007_3"[label="0x00401007_3"];
"0x00401005_1"[label="0x00401005_1"];
"0xface0000_2" -> "0xface0000_3" [color="#000000",label="fs := alloc()"];
"0x00401008_1" -> "0x00401007_0" [color="#000000",label="assume (! (ecx == 0))"];
"0x00401007_4" -> "0x00401007_5" [color="#000000",label="SF := (eax < 0)"];
"0x00401005_0" -> "0x00401005_1" [color="#000000",label="eax := 0"];
"0x00401008_0" -> "0x00401008_1" [color="#000000",label="ecx := (ecx + -1)"];
"0x0040100a_2" -> "0xfee70000_0" [color="#000000",label="assume (retaddr == -18415616)"];
"0xface0000_0" -> "0xface0000_1" [color="#000000",label="DF := false"];
"0x0040100a_1" -> "0x0040100a_2" [color="#000000",label="esp := (esp + 4)"];
"0x00401007_1" -> "0x00401007_2" [color="#000000",label="eax := (eax + 1)"];
"0x0040100a_0" -> "0x0040100a_1" [color="#000000",label="retaddr := mem32[esp]"];
"0x00401007_5" -> "0x00401008_0" [color="#000000",label="ZF := (eax == 0)"];
"0x00401007_0" -> "0x00401007_1" [color="#000000",label="tmp1 := eax"];
"0x00401005_4" -> "0x00401007_0" [color="#000000",label="SF := (eax < 0)"];
"0x00401005_2" -> "0x00401005_3" [color="#000000",label="OF := false"];
"0x00401005_3" -> "0x00401005_4" [color="#000000",label="ZF := (eax == 0)"];
"0x00401007_2" -> "0x00401007_3" [color="#000000",label="CF := ((! (eax < 0)) & (tmp1 < 0))"];
"0xface0000_5" -> "0x00401000_0" [color="#000000",label="assume true"];
"0xface0000_3" -> "0xface0000_4" [color="#000000",label="esp := (esp + -4)"];
"0x00401000_0" -> "0x00401005_0" [color="#000000",label="ecx := 1000"];
"0x00401008_1" -> "0x0040100a_0" [color="#000000",label="assume (ecx == 0)"];
"0x00401007_3" -> "0x00401007_4" [color="#000000",label="OF := ((eax < 0) & (! (tmp1 < 0)))"];
"0xface0000_4" -> "0xface0000_5" [color="#000000",label="mem32[esp] := -18415616"];
"0x00401005_1" -> "0x00401005_2" [color="#000000",label="CF := false"];
"0xface0000_1" -> "0xface0000_2" [color="#000000",label="esp := alloc()"];
}
