digraph G {
node[shape=rectangle,style=filled,fillcolor=lightsteelblue,color=lightsteelblue]
bgcolor="transparent"
graph [label="Jakstab v0.8.4-devel   Mon Jul 03 10:59:00 BST 2017\n-m input/bin/vmcai_demo.exe", labelloc=t, fontsize=35, pad=30]"0x00401000_1"[label="0x00401000_1"];
"0x00401000_0"[label="0x00401000_0"];
"0x00401000_3"[label="0x00401000_3"];
"0x00401000_2"[label="0x00401000_2"];
"0x00401000_4"[label="0x00401000_4"];
"0x00401015_0"[label="0x00401015_0"];
"0x00401015_2"[label="0x00401015_2"];
"0x00401015_1"[label="0x00401015_1"];
"0x00401015_4"[label="0x00401015_4"];
"0x00401015_3"[label="0x00401015_3"];
"0x00401015_5"[label="0x00401015_5"];
"0x0040100d_0"[label="0x0040100d_0"];
"0x00401005_0"[label="0x00401005_0"];
"0x00401003_0"[label="0x00401003_0"];
"0x00401018_0"[label="0x00401018_0"];
"0xface0000_0"[label="0xface0000_0",fillcolor="lightgrey",color="green",style="filled,bold"];
"0x00401012_1"[label="0x00401012_1"];
"0x00401012_0"[label="0x00401012_0"];
"0xface0000_1"[label="0xface0000_1",fillcolor="lightgrey",color="lightgrey"];
"0x00401012_3"[label="0x00401012_3"];
"0x00401012_2"[label="0x00401012_2"];
"0x00401012_5"[label="0x00401012_5"];
"0xface0000_4"[label="0xface0000_4",fillcolor="lightgrey",color="lightgrey"];
"0x00401012_4"[label="0x00401012_4"];
"0xface0000_5"[label="0xface0000_5",fillcolor="lightgrey",color="lightgrey"];
"0xface0000_2"[label="0xface0000_2",fillcolor="lightgrey",color="lightgrey"];
"0x0040100c_1"[label="0x0040100c_1"];
"0xface0000_3"[label="0xface0000_3",fillcolor="lightgrey",color="lightgrey"];
"0x0040100c_0"[label="0x0040100c_0"];
"0x0040100c_2"[label="0x0040100c_2"];
"0x0040100a_0"[label="0x0040100a_0"];
"0xfee70000_0"[label="0xfee70000_0",fillcolor="lightgrey",color="orange",style="filled,bold"];
"0x00401000_1" -> "0x00401000_2" [color="#000000",label="CF := (eax u< 0)"];
"0x00401012_3" -> "0x00401012_4" [color="#000000",label="OF := ((0 < eax) & (tmp1 < 0))"];
"0xface0000_2" -> "0xface0000_3" [color="#000000",label="fs := alloc()"];
"0x00401015_1" -> "0x00401015_2" [color="#000000",label="eax := (eax + -1)"];
"0x00401000_4" -> "0x00401003_0" [color="#000000",label="ZF := (eax == 0)"];
"0x0040100c_1" -> "0x0040100c_2" [color="#000000",label="esp := (esp + 4)"];
"0x0040100d_0" -> "0x00401012_0" [color="#000000",label="eax := 4198424"];
"0x00401005_0" -> "0x0040100a_0" [color="#000000",label="eax := 4198401"];
"0x0040100c_0" -> "0x0040100c_1" [color="#000000",label="retaddr := mem32[esp]"];
"0xface0000_0" -> "0xface0000_1" [color="#000000",label="DF := false"];
"0x00401018_0" -> "0x00401012_0" [color="#000000",label="assume (eax == 4198418)"];
"0x00401012_0" -> "0x00401012_1" [color="#000000",label="tmp1 := eax"];
"0x00401015_5" -> "0x00401018_0" [color="#000000",label="ZF := (tmp1 == 1)"];
"0x00401012_5" -> "0x00401015_0" [color="#000000",label="ZF := (tmp1 == 5)"];
"0x00401018_0" -> "0x0040100c_0" [color="#000000",label="assume (eax == 4198412)"];
"0x00401000_3" -> "0x00401000_4" [color="#000000",label="SF := (tmp1 < 0)"];
"0x00401000_2" -> "0x00401000_3" [color="#000000",label="OF := ((0 < tmp1) & (eax < 0))"];
"0x00401012_1" -> "0x00401012_2" [color="#000000",label="eax := (eax + -5)"];
"0xface0000_5" -> "0x00401000_0" [color="#000000",label="assume true"];
"0xface0000_3" -> "0xface0000_4" [color="#000000",label="esp := (esp + -4)"];
"0x00401003_0" -> "0x00401005_0" [color="#000000",label="assume (! ((SF ^ OF) | ZF))"];
"0x00401012_2" -> "0x00401012_3" [color="#000000",label="CF := (tmp1 u< 5)"];
"0x00401000_0" -> "0x00401000_1" [color="#000000",label="tmp1 := eax"];
"0x0040100a_0" -> "0x00401015_0" [color="#000000",label="assume true"];
"0x00401015_2" -> "0x00401015_3" [color="#000000",label="CF := (tmp1 u< 1)"];
"0x00401015_0" -> "0x00401015_1" [color="#000000",label="tmp1 := eax"];
"0x00401012_4" -> "0x00401012_5" [color="#000000",label="SF := (eax < 0)"];
"0x00401018_0" -> "0x00401000_0" [color="#000000",label="assume (eax == 4198400)"];
"0xface0000_4" -> "0xface0000_5" [color="#000000",label="mem32[esp] := -18415616"];
"0x00401015_3" -> "0x00401015_4" [color="#000000",label="OF := ((0 < eax) & (tmp1 < 0))"];
"0xface0000_1" -> "0xface0000_2" [color="#000000",label="esp := alloc()"];
"0x0040100c_2" -> "0xfee70000_0" [color="#000000",label="assume (retaddr == -18415616)"];
"0x00401015_4" -> "0x00401015_5" [color="#000000",label="SF := (eax < 0)"];
"0x00401003_0" -> "0x0040100d_0" [color="#000000",label="assume ((SF ^ OF) | ZF)"];
}
